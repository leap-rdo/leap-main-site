---
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import ProjectsSection from "@/partials/ProjectsSection.astro";
import CallToAction from "@/partials/CallToAction.astro";
import fetchApi from "@/lib/strapi";
import type Project from "@/interfaces/project";

const projects = await fetchApi<Project[]>({
  endpoint: "projects",
  wrappedByKey: "data",
  query: { locale: "en", populate: "*" },
});

const { slug } = Astro.params;
const totalPages = Math.ceil(projects.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = projects.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
  const projects = await fetchApi<Project[]>({
    endpoint: "projects",
    wrappedByKey: "data",
    query: { locale: "en", populate: "*" },
  });

  const totalPages = Math.ceil(projects.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const title = "Our Projects";
const description = "Leap RDO Projects";
---

<Base title={title} description={description}>
  <ProjectsSection visibleProjects={6} projects={currentPosts} />
  <Pagination currentPage={currentPage} totalPages={totalPages} />
  <CallToAction />
</Base>
