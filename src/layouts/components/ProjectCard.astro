---
import config from "@/config/config.json";
import DynamicIcon from "@/helpers/DynamicIcon";
import dateFormat from "@/lib/utils/dateFormat";
import { plainify } from "@/lib/utils/textConverter";
import ImageMod from "./ImageMod.astro";
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from "@/i18n/utils";
import { Image } from "astro:assets";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const { summary_length } = config.settings;

const {
  cardLayout,
  project: { id, slug, title, image, date, content },
} = Astro.props;
---

<div class="bg-body" id=`project-${id}`>
  {
    image && (
      <div class="relative flex items-center justify-center">
        <Image
          class={`${cardLayout === "creative" ? "absolute h-[80%] w-[90%] md:h-[70%] md:w-[82%]" : "h-[300px]"} mb-6 rounded-3xl object-cover`}
          src={import.meta.env.STRAPI_URL + image.url}
          alt={title}
          width={image.width}
          height={image.height}
          format="webp"
        />
        {cardLayout === "creative" && (
          <ImageMod
            class="mb-6 h-[300px] w-full rounded-3xl object-cover md:h-[400px]"
            src="/images/blog-card-bg.png"
            alt={"pattern"}
            format="webp"
          />
        )}
      </div>
    )
  }
  {
    date && (
      <div class="mb-4 flex items-center gap-x-2">
        <ImageMod
          class="w-5"
          src="/images/icons/png/date.png"
          alt="date icon"
        />
        <p class="inline-block font-medium text-tertiary">{dateFormat(date)}</p>
      </div>
    )
  }
  {
    title && (
      <h3 class="h5 mb-3">
        <a
          href={translatePath(
            `/projects/${lang == "ar" ? title.replace(" ", "-") : slug}/`,
          )}>
          {title}
        </a>
      </h3>
    )
  }
  {
    content && (
      <p class="mb-6">{plainify(content?.slice(0, Number(summary_length)))}</p>
    )
  }
  <a
    class="btn btn-text"
    href={translatePath(
      `/projects/${lang == "ar" ? title.replace(" ", "-") : slug}/`,
    )}>
    {t("projects.readmore")}
    <div class="icon-wrapper">
      <span class="icon">
        <DynamicIcon
          className="w-4"
          icon={t("direction") == "ltr" ? "FaArrowRight" : "FaArrowLeft"}
        />
      </span>
      <span class="icon" aria-hidden="true">
        <DynamicIcon
          className="w-4"
          icon={t("direction") == "ltr" ? "FaArrowRight" : "FaArrowLeft"}
        />
      </span>
    </div>
  </a>
</div>
