---
import { join } from "node:path";
import config from "@/config/config.json";
import theme from "@/config/theme.json";
import { plainify } from "@/lib/utils/textConverter";
import Footer from "@/partials/Footer.astro";
import Header from "@/partials/Header.astro";
import "@/styles/main.css";
import { AstroFont } from "astro-font";
import { ClientRouter } from "astro:transitions";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import type Seo from '@/interfaces/seo';

// font families
const pf = theme.fonts.font_family.primary;
const sf = theme.fonts.font_family.secondary;

// let fontPrimary, fontSecondary;
// if (theme.fonts.font_family.primary) {
//   fontPrimary = theme.fonts.font_family.primary
//     .replace(/\+/g, " ")
//     .replace(/:[ital,]*[ital@]*[wght@]*[0-9,;.]+/gi, "");
// }
// if (theme.fonts.font_family.secondary) {
//   fontSecondary = theme.fonts.font_family.secondary
//     .replace(/\+/g, " ")
//     .replace(/:[ital,]*[ital@]*[wght@]*[0-9,;.]+/gi, "");
// }

interface Props {
  title?: string,
  notFoundPage?: boolean,
  description?: string,
  image?: string,
  seo?: Seo,
}

const {
  title,
  notFoundPage,
  description,
  image,
  seo,
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<!doctype html>
<html lang={lang} dir={t("direction")}>
  <head>
    <!-- favicon -->
    <link rel="shortcut icon" href={config.site.favicon} />
    <!-- theme meta -->
    <meta name="theme-name" content="fortify-astro" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <!-- google font css -->
    <AstroFont
      config={[
        {
          name: pf,
          src: [
            {
              style: "normal",
              weight: "400",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "Satoshi-Regular.woff2",
              ),
            },
            {
              style: "normal",
              weight: "500",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "Satoshi-Medium.woff2",
              ),
            },
            {
              style: "normal",
              weight: "700",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "Satoshi-Bold.woff2",
              ),
            },
          ],
          preload: false,
          display: "swap",
          selector: "body",
          fallback: "sans-serif",
          cssVariable: "font-primary",
        },
        {
          name: sf,
          src: [
            {
              style: "normal",
              weight: "500",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "ClashGrotesk-Medium.woff2",
              ),
            },
          ],
          preload: false,
          display: "swap",
          selector: "body",
          fallback: "sans-serif",
          cssVariable: "font-secondary",
        },
      ]}
    />

    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <!-- title -->
    <title>
      {plainify(seo?.metaTitle? seo?.metaTitle: title? title : config.site.title)}
    </title>

    <!-- canonical url -->
    {seo?.canonicalURL && <link rel="canonical" href={seo?.canonicalURL} item-prop="url" />}

    <!-- noindex robots -->
    {seo?.metaRobots && <meta name="robots" content={seo?.metaRobots} />}

    <!-- meta-description -->
    <meta
      name="description"
      content={plainify(
        seo?.metaDescription ? seo?.metaDescription : config.metadata.meta_description,
      )}
    />

    <ClientRouter />

    <!-- author from config.json -->
    <meta name="author" content={config.metadata.meta_author} />

    <!-- og-title -->
     <!-- ----------------------------------------------------------------- -->
    <meta
      property="og:title"
      content={plainify(
        seo?.metaTitle? seo?.metaTitle: title? title : config.site.title,
      )}
    />

    <!-- og-description -->
    <meta
      property="og:description"
      content={plainify(
        description ? description : config.metadata.meta_description,
      )}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
    />

    <!-- twitter-title -->
    <meta
      name="twitter:title"
      content={plainify(
        seo?.metaTitle? seo?.metaTitle: title? title : config.site.title,
      )}
    />

    <!-- twitter-description -->
    <meta
      name="twitter:description"
      content={plainify(
        description ? description : config.metadata.meta_description,
      )}
    />

    <!-- og-image -->
    <meta
      property="og:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />

    <!-- twitter-image -->
    <meta
      name="twitter:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />
    <meta name="twitter:card" content="summary_large_image" />

    {seo?.structuredData && (
      <script type="application/ld+json">
        {seo?.structuredData}
      </script>
    )}
  </head>
  <body>
    <Header banner={Astro.url.pathname === "/" || Astro.url.pathname === "/en/"} errorPage={notFoundPage} />
    <main id="main-content">
      <slot />
    </main>
    <Footer />
    <script>
      import AOS from "aos";
      import "aos/dist/aos.css";

      let scrollRef = 0;

      // Fix `not animating although in viewport` issue
      window.addEventListener("scroll", function () {
        scrollRef <= 10 ? scrollRef++ : AOS.refresh();
      });

      function aosInit() {
        AOS.init({
          duration: 450,
          offset: 100,
          once: true,
        });
      }

      function scriptInit() {
        // Dropdown Menu Toggler For Mobile
        const dropdownMenuToggler: NodeListOf<HTMLElement> =
          document.querySelectorAll(".nav-dropdown > .nav-link");

        dropdownMenuToggler.forEach((toggler) => {
          toggler?.addEventListener("click", (e: Event) => {
            const target = e.target as HTMLElement;
            target && target.parentElement?.classList.toggle("active");
          });
        });
      }

      document.addEventListener("astro:page-load", () => {
        scriptInit();
        aosInit();
      });
    </script>
  </body>
</html>
