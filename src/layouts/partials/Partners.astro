---
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import fetchApi from "@/lib/strapi";
import type Partner from "@/interfaces/partner";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const data = await fetchApi<Partner[]>({
  endpoint: "partners",
  wrappedByKey: "data",
});

const clients = (await getEntry(
  "clientsSection",
  "clients",
)) as CollectionEntry<"clientsSection">;

const { title, list } = clients.data;
---

<section class="section">
  <div class="container">
    <div class="row">
      <div class="col-12" data-aos="fade-up-sm">
        <div class="text-center sm:flex">
          <p
            class="w-full pb-3 text-center font-medium tracking-wide sm:whitespace-nowrap sm:pb-0 text-lg"
            set:html={markdownify(t("partners.title"))}
          />
        </div>
      </div>
      <div class="col-12 pt-10" data-aos="fade-up-sm" data-aos-delay="200">
        <div
          class="flex justify-center gap-x-12 gap-y-6 grayscale opacity-50 max-lg:flex-wrap">
          {
            data?.map((partner) =>
              partner.image ? (
                <div class="flex aspect-[3.125_/_1] w-36 items-center">
                  <img
                    src={partner.image.url}
                    alt={`${partner.name} Logo`}
                    height="120"
                  />
                </div>
              ) : (
                <div class="flex aspect-[3.125_/_1] items-center font-bold text-lg">
                  {partner.name}
                </div>
              ),
            )
          }
        </div>
      </div>
    </div>
  </div>
</section>
