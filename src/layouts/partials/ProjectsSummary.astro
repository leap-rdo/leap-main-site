---
import ProjectCard from "@/components/ProjectCard.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import fetchApi from "@/lib/strapi";
import type Project from "@/interfaces/project";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let projects = await fetchApi<Project[]>({
  endpoint: "projects",
  wrappedByKey: "data",
  query: { locale: lang, populate: "*" },
});

let { visibleProjects } = Astro.props;

visibleProjects && (projects = projects.slice(0, visibleProjects));
---

{
  projects.length && (
    <section class="section overflow-hidden">
      <div class="container">
        <div class="row">
          <div class="mx-auto text-center lg:col-10" data-aos="fade-up-sm">
            <h2 class="mb-6" set:html={markdownify(t("projects.title"))} />
            <p
              class="text-lg/[inherit]"
              set:html={markdownify(t("projects.description"))}
            />
          </div>
          <div class="col-12 pt-20" data-aos="fade-up-sm" data-aos-delay="200">
            <div class="row gx-4 gy-5 justify-center md:gx-5">
              {projects?.map((project: Project) => (
                <div class="md:col-6 lg:col-4">
                  {project && <ProjectCard project={project} />}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
