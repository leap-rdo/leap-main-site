---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry, type CollectionEntry } from "astro:content";

const { title, subtitle, description, list, stats } = (
  (await getEntry(
    "ourValuesSection",
    "our-values"
  )) as CollectionEntry<"ourValuesSection">
).data;
---

<section class="section">
  <div class="container">
    <div class="row">
      <div class="mx-auto text-center lg:col-10" data-aos="fade-up-sm">
        {
          subtitle && (
            <p
              class="mb-2 text-tertiary font-medium"
              set:html={markdownify(subtitle)}
            />
          )
        }
        {title && <h2 class="mb-6" set:html={markdownify(title)} />}
        {
          description && (
            <p class="text-lg/[inherit]" set:html={markdownify(description)} />
          )
        }
      </div>
      <div class="col-12 pt-20">
        <div class="row g-4 justify-center">
          {
            list?.map((item, index) => (
              <div
                class="md:col-6 lg:col-4"
                data-aos="fade-up-sm"
                data-aos-delay={200 + index * 50}>
                <div class="min-h-full rounded-xl bg-light px-6 py-12 text-center md:rounded-3xl">
                  {item.icon && (
                    <div class="mx-auto mb-3 flex h-12 w-12 items-center justify-center rounded-full bg-tertiary">
                      <ImageMod
                        class="h-6 w-6 object-cover"
                        src={item.icon}
                        alt={`icon related to ${item.title}`}
                      />
                    </div>
                  )}
                  {item.title && (
                    <h3 class="h5 mb-2" set:html={markdownify(item.title)} />
                  )}
                  {item.description && (
                    <p set:html={markdownify(item.description)} />
                  )}
                </div>
              </div>
            ))
          }
        </div>
        <div class="row g-4 justify-center pt-16">
          {
            stats?.map((item, index) => (
              <div
                class="md:col-4 lg:col-4"
                data-aos="fade-up-sm"
                data-aos-delay={(stats.length - index) * 100}>
                <div class="text-center">
                  {item.label && (
                    <p
                      class="mb-3 lg:text-lg/[inherit]"
                      set:html={markdownify(item.label)}
                    />
                  )}
                  {item.value && (
                    <h3
                      class="h2 lg:h1 mb-2"
                      set:html={markdownify(item.value)}
                    />
                  )}
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>
